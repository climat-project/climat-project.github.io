"use strict";(self.webpackChunkclimat=self.webpackChunkclimat||[]).push([[773],{8439:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>s,default:()=>f,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"cli-dsl-reference/toolchain","title":"Toolchain","description":"A Toolchain is a CLI tool that has many functionalities and which is written in Cli DSL.","source":"@site/docs/cli-dsl-reference/toolchain.mdx","sourceDirName":"cli-dsl-reference","slug":"/cli-dsl-reference/toolchain","permalink":"/docs/cli-dsl-reference/toolchain","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Toolchain"},"sidebar":"cliDsl","previous":{"title":"Overview","permalink":"/docs/cli-dsl-reference/overview"},"next":{"title":"Subcommands","permalink":"/docs/cli-dsl-reference/subcommands"}}');var i=t(4848),c=t(8453);function l(e){const n={code:"code",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-clidsl",metastring:'title="toolchain.cli"',children:"my-toolchain {                // <- Root toolchain\r\n                              //    The name of the root toolchain will\r\n                              //    define the name of the executable CLI\r\n       \r\n  action <% echo Hello %>     // <- The action to execute when the\r\n                              //    toolchain is invoked\r\n}\n"})})}function r(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}const a={title:"Toolchain"},s=void 0,h={},d=[];function u(e){const n={a:"a",code:"code",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"A Toolchain is a CLI tool that has many functionalities and which is written in Cli DSL.\r\nWe call it like that because often we aggregate different CLI tools under a single toolchain"}),"\n",(0,i.jsx)(n.p,{children:'Below we have a commented simple snippet of a toolchain writing "Hello" when called:'}),"\n",(0,i.jsx)(r,{}),"\n",(0,i.jsxs)(n.p,{children:["After ",(0,i.jsx)(n.a,{href:"/docs/getting-started/your-first-toolchain",children:"installing"}),' the script, CLiMAT will\r\ncreate a binary called "my-toolchain" that we can invoke from the console']}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",metastring:'title="Console"',children:"$ my-toolchain\r\nHello\n"})})]})}function f(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var o=t(6540);const i={},c=o.createContext(i);function l(e){const n=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(c.Provider,{value:n},e.children)}}}]);