"use strict";(self.webpackChunkclimat=self.webpackChunkclimat||[]).push([[204],{5121:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>m,default:()=>j,frontMatter:()=>h,metadata:()=>s,toc:()=>x});const s=JSON.parse('{"id":"cli-dsl-reference/constants","title":"Constants","description":"You can define constants for data that you want to use multiple times throughout your Toolchain.","source":"@site/docs/cli-dsl-reference/constants.mdx","sourceDirName":"cli-dsl-reference","slug":"/cli-dsl-reference/constants","permalink":"/docs/cli-dsl-reference/constants","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Constants"},"sidebar":"cliDsl","previous":{"title":"Subcommands","permalink":"/docs/cli-dsl-reference/subcommands"},"next":{"title":"Parameters","permalink":"/docs/cli-dsl-reference/parameters"}}');var o=t(4848),c=t(8453);function r(n){const e={code:"code",pre:"pre",...(0,c.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-clidsl",metastring:'title="constants.cli"',children:'my-toolchain {\r\n  const my-const = "My Dear Constant Value"\r\n  action <% echo $(my-const) %>\r\n}\n'})})}function a(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(r,{...n})}):r(n)}function i(n){const e={code:"code",pre:"pre",...(0,c.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-clidsl",metastring:'title="templates.cli"',children:'my-toolchain {\r\n  const my-const = "My Dear Constant Value"\r\n  \r\n  sub my-child {\r\n    action <% echo Child $(my-const) %>\r\n  }\r\n}\n'})})}function l(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(i,{...n})}):i(n)}function d(n){const e={code:"code",pre:"pre",...(0,c.R)(),...n.components};return(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-clidsl",metastring:'title="interpolation.cli"',children:'my-toolchain {\r\n  const my = "My"\r\n  const dear = "Dear"\r\n  const constant = "Constant"\r\n  const value = "Value"\r\n\r\n  const my-const = "$(my) $(dear) $(constant) $(value)"\r\n  \r\n  sub my-child {\r\n    action <% echo Child $(my-const) %>\r\n  }\r\n}\n'})})}function u(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}const h={title:"Constants"},m="Constants",p={},x=[];function f(n){const e={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,c.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"constants",children:"Constants"})}),"\n",(0,o.jsx)(e.p,{children:"You can define constants for data that you want to use multiple times throughout your Toolchain."}),"\n",(0,o.jsx)(a,{}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sh",metastring:'title="Console"',children:"$ my-toolchain\r\nMy Dear Constant Value\n"})}),"\n",(0,o.jsx)(e.h1,{id:"scope",children:"Scope"}),"\n",(0,o.jsx)(e.p,{children:"Constants are visible in both the defined scope and the child scopes."}),"\n",(0,o.jsx)(l,{}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sh",metastring:'title="Console"',children:"$ my-toolchain my-child\r\nChild My Dear Constant Value\n"})}),"\n",(0,o.jsx)(e.h1,{id:"interpolation",children:"Interpolation"}),"\n",(0,o.jsx)(e.p,{children:"You can use interpolation when assigning a value to a constant. Reference other\r\nconstants or even parameters."}),"\n",(0,o.jsx)(u,{}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-sh",metastring:'title="Console"',children:"$ my-toolchain my-child\r\nChild My Dear Constant Value\n"})})]})}function j(n={}){const{wrapper:e}={...(0,c.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(f,{...n})}):f(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>a});var s=t(6540);const o={},c=s.createContext(o);function r(n){const e=s.useContext(c);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),s.createElement(c.Provider,{value:e},n.children)}}}]);