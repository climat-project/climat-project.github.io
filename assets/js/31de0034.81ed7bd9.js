"use strict";(self.webpackChunkclimat=self.webpackChunkclimat||[]).push([[315],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>y});var o=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=o.createContext({}),d=function(e){var n=o.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=d(e.components);return o.createElement(p.Provider,{value:n},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=d(t),m=a,y=s["".concat(p,".").concat(m)]||s[m]||g[m]||r;return t?o.createElement(y,l(l({ref:n},c),{},{components:t})):o.createElement(y,l({ref:n},c))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[s]="string"==typeof e?e:a,l[1]=i;for(var d=2;d<r;d++)l[d]=t[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4504:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>y,contentTitle:()=>g,default:()=>b,frontMatter:()=>s,metadata:()=>m,toc:()=>u});var o=t(8168),a=(t(6540),t(5680));const r={toc:[]},l="wrapper";function i(e){let{components:n,...t}=e;return(0,a.yg)(l,(0,o.A)({},r,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-clidsl",metastring:"title=mapping-flags.cli",title:"mapping-flags.cli"},'hello-world(goodDay: flag) {\n    sub foo {\n        action "echo Hello World $(goodDay)"\n    }\n    sub bar {\n        action "echo Hello World $(goodDay:today-is-a-good-day)"\n    }\n    sub baz {\n        action "echo Hello World $(!goodDay:today-is-NOT-a-good-day)"\n    }\n}\n')))}i.isMDXComponent=!0;const p={toc:[]},d="wrapper";function c(e){let{components:n,...t}=e;return(0,a.yg)(d,(0,o.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-clidsl",metastring:"title=mapping-args.cli",title:"mapping-args.cli"},'hello-world(dayOfTheWeek: arg) {\n    sub foo {\n        action "echo Hello World $(dayOfTheWeek)"\n    }\n    sub bar {\n        action "echo Hello World $(dayOfTheWeek:--today-is)"\n    }\n}\n')))}c.isMDXComponent=!0;const s={title:"Command template"},g=void 0,m={unversionedId:"cli-dsl-reference/command-template",id:"cli-dsl-reference/command-template",title:"Command template",description:"Command templates are used to map the input to any desired command.",source:"@site/docs/cli-dsl-reference/command-template.mdx",sourceDirName:"cli-dsl-reference",slug:"/cli-dsl-reference/command-template",permalink:"/docs/cli-dsl-reference/command-template",draft:!1,tags:[],version:"current",frontMatter:{title:"Command template"},sidebar:"cliDsl",previous:{title:"Parameters",permalink:"/docs/cli-dsl-reference/parameters"},next:{title:"JavaScript",permalink:"/docs/cli-dsl-reference/javascript"}},y={},u=[],f={toc:u},h="wrapper";function b(e){let{components:n,...t}=e;return(0,a.yg)(h,(0,o.A)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("p",null,"Command templates are used to map the input to any desired command."),(0,a.yg)("h1",{id:"mapping-flags"},"Mapping flags"),(0,a.yg)("p",null,"Can be done in two ways:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Interpolating the string value of flags (i.e. ",(0,a.yg)("inlineCode",{parentName:"li"},"false")," or ",(0,a.yg)("inlineCode",{parentName:"li"},"true"),") into the command string"),(0,a.yg)("li",{parentName:"ul"},"Interpolating or not, a predefined identifier based on the truthness of the flag")),(0,a.yg)(i,{mdxType:"MappingFlags"}),(0,a.yg)("p",null,"When executing ",(0,a.yg)("inlineCode",{parentName:"p"},"foo"),", the flag ",(0,a.yg)("inlineCode",{parentName:"p"},"goodDay"),"'s value will just be interpolated into the string"),(0,a.yg)("p",null,"When executing ",(0,a.yg)("inlineCode",{parentName:"p"},"bar"),", the flag will decide whether the string ",(0,a.yg)("inlineCode",{parentName:"p"},"today-is-a-good-day"),"\nis interpolated, or not"),(0,a.yg)("p",null,"When executing ",(0,a.yg)("inlineCode",{parentName:"p"},"baz"),", the effect will be the same as for ",(0,a.yg)("inlineCode",{parentName:"p"},"bar"),", only the flag will be inverted"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash",metastring:"title=Console",title:"Console"},"$ hello-world foo\nHello World false\n\n$ hello-world --goodDay foo\nHello World true\n\n$ hello-world bar\nHello World\n\n$ hello-world --goodDay bar\nHello World today-is-a-good-day\n\n$ hello-world baz\nHello World today-is-NOT-a-good-day\n\n$ hello-world --goodDay baz\nHello World\n")),(0,a.yg)("h1",{id:"mapping-args"},"Mapping args"),(0,a.yg)("p",null,"Similar to flags, mapping args can be done in two ways:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Interpolating the value"),(0,a.yg)("li",{parentName:"ul"},"Interpolating with a key prefix")),(0,a.yg)(c,{mdxType:"MappingArgs"}),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash",metastring:"title=Console",title:"Console"},"$ hello-world Tuesday foo\nHello World Tuesday\n\n$ hello-world Tuesday bar\nHello World --today-is=Tuesday\n")))}b.isMDXComponent=!0}}]);