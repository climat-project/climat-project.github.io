"use strict";(self.webpackChunkclimat=self.webpackChunkclimat||[]).push([[379],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),d=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=d(n),u=a,f=s["".concat(p,".").concat(u)]||s[u]||m[u]||r;return n?o.createElement(f,l(l({ref:t},c),{},{components:n})):o.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[s]="string"==typeof e?e:a,l[1]=i;for(var d=2;d<r;d++)l[d]=n[d];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3202:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>g,frontMatter:()=>d,metadata:()=>s,toc:()=>u});var o=n(7462),a=(n(7294),n(3905));const r={toc:[]};function l(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},r,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-clidsl",metastring:"title=mapping-flags.cli",title:"mapping-flags.cli"},'hello-world(goodDay?: flag) {\n    sub foo {\n        action "echo Hello World $(goodDay)"\n    }\n    sub bar {\n        action "echo Hello World $(goodDay:today-is-a-good-day)"\n    }\n    sub baz {\n        action "echo Hello World $(!goodDay:today-is-NOT-a-good-day)"\n    }\n}\n')))}l.isMDXComponent=!0;const i={toc:[]};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-clidsl",metastring:"title=mapping-args.cli",title:"mapping-args.cli"},'hello-world(dayOfTheWeek: arg) {\n    sub foo {\n        action "echo Hello World $(dayOfTheWeek)"\n    }\n    sub bar {\n        action "echo Hello World $(dayOfTheWeek:--today-is)"\n    }\n}\n')))}p.isMDXComponent=!0;const d={title:"Command template"},c=void 0,s={unversionedId:"cli-dsl-reference/command-template",id:"cli-dsl-reference/command-template",title:"Command template",description:"Command templates are used to map the input to any desired command.",source:"@site/docs/cli-dsl-reference/command-template.mdx",sourceDirName:"cli-dsl-reference",slug:"/cli-dsl-reference/command-template",permalink:"/docs/cli-dsl-reference/command-template",draft:!1,tags:[],version:"current",frontMatter:{title:"Command template"},sidebar:"cliDsl",previous:{title:"Parameters",permalink:"/docs/cli-dsl-reference/parameters"},next:{title:"JavaScript",permalink:"/docs/cli-dsl-reference/javascript"}},m={},u=[],f={toc:u};function g(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Command templates are used to map the input to any desired command."),(0,a.kt)("h1",{id:"mapping-flags"},"Mapping flags"),(0,a.kt)("p",null,"Can be done in two ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Interpolating the string value of flags (i.e. ",(0,a.kt)("inlineCode",{parentName:"li"},"false")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),") into the command string"),(0,a.kt)("li",{parentName:"ul"},"Interpolating or not, a predefined identifier based on the truthness of the flag")),(0,a.kt)(l,{mdxType:"MappingFlags"}),(0,a.kt)("p",null,"When executing ",(0,a.kt)("inlineCode",{parentName:"p"},"foo"),", the flag ",(0,a.kt)("inlineCode",{parentName:"p"},"goodDay"),"'s value will just be interpolated into the string"),(0,a.kt)("p",null,"When executing ",(0,a.kt)("inlineCode",{parentName:"p"},"bar"),", the flag will decide whether the string ",(0,a.kt)("inlineCode",{parentName:"p"},"today-is-a-good-day"),"\nis interpolated, or not"),(0,a.kt)("p",null,"When executing ",(0,a.kt)("inlineCode",{parentName:"p"},"baz"),", the effect will be the same as for ",(0,a.kt)("inlineCode",{parentName:"p"},"bar"),", only the flag will be inverted"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=Console",title:"Console"},"$ hello-world foo\nHello World false\n\n$ hello-world --goodDay foo\nHello World true\n\n$ hello-world bar\nHello World\n\n$ hello-world --goodDay bar\nHello World today-is-a-good-day\n\n$ hello-world baz\nHello World today-is-NOT-a-good-day\n\n$ hello-world --goodDay baz\nHello World\n")),(0,a.kt)("h1",{id:"mapping-args"},"Mapping args"),(0,a.kt)("p",null,"Similar to flags, mapping args can be done in two ways:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Interpolating the value"),(0,a.kt)("li",{parentName:"ul"},"Interpolating with a key prefix")),(0,a.kt)(p,{mdxType:"MappingArgs"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"title=Console",title:"Console"},"$ hello-world Tuesday foo\nHello World Tuesday\n\n$ hello-world Tuesday bar\nHello World --today-is=Tuesday\n")))}g.isMDXComponent=!0}}]);